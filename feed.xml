<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://node-security.com/</id><title>Node Security</title><subtitle>Security and programming blog containing guides and examples of how to do various penetration testing and programming related tasks.</subtitle> <updated>2021-12-12T19:58:02+11:00</updated> <author> <name>Alexander Wells</name> <uri>https://node-security.com/</uri> </author><link rel="self" type="application/atom+xml" href="https://node-security.com/feed.xml"/><link rel="alternate" type="text/html" hreflang="en-US" href="https://node-security.com/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2021 Alexander Wells </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Cryptography - Byte by Byte ECB Decryption</title><link href="https://node-security.com/posts/cryptography-byte-by-byte-ecb-decryption/" rel="alternate" type="text/html" title="Cryptography - Byte by Byte ECB Decryption" /><published>2021-12-12T19:50:23+11:00</published> <updated>2021-12-12T19:50:23+11:00</updated> <id>https://node-security.com/posts/cryptography-byte-by-byte-ecb-decryption/</id> <content src="https://node-security.com/posts/cryptography-byte-by-byte-ecb-decryption/" /> <author> <name>Alexander Wells</name> </author> <category term="security" /> <category term="cryptography" /> <summary> In this post we’ll cover how to attack an oracle function that encrypts user supplied data concatenated with an unknown string under ECB mode while using a constant but unknown key. This post will assume you know what PKCS#7 padding is. If you’re unsure what this is, you can read my short post about it here. This post is also a solution to challenge 12 on the cryptopals website. This site is ... </summary> </entry> <entry><title>Cryptography - Breaking Repeating Key XOR Encryption</title><link href="https://node-security.com/posts/cryptography-breaking-repeating-xor-key-encryption/" rel="alternate" type="text/html" title="Cryptography - Breaking Repeating Key XOR Encryption" /><published>2021-12-11T08:24:02+11:00</published> <updated>2021-12-11T08:24:02+11:00</updated> <id>https://node-security.com/posts/cryptography-breaking-repeating-xor-key-encryption/</id> <content src="https://node-security.com/posts/cryptography-breaking-repeating-xor-key-encryption/" /> <author> <name>Alexander Wells</name> </author> <category term="security" /> <category term="cryptography" /> <summary> In this post we’ll cover how to decrypt messages that have been XOR encrypted using a repeated key, such as 84 d2 7a 09. The method we’ll be using to break the encryption uses statistics (letter frequencies and use of common words, bigrams, and trigrams), so the cipher-text needs to be a decent size otherwise it won’t work. The key used can be any arbitrary number of bytes long, but in general,... </summary> </entry> <entry><title>Cryptography - Breaking Single Byte XOR Encryption</title><link href="https://node-security.com/posts/cryptography-breaking-single-byte-xor-encryption/" rel="alternate" type="text/html" title="Cryptography - Breaking Single Byte XOR Encryption" /><published>2021-12-06T08:24:02+11:00</published> <updated>2021-12-06T08:24:02+11:00</updated> <id>https://node-security.com/posts/cryptography-breaking-single-byte-xor-encryption/</id> <content src="https://node-security.com/posts/cryptography-breaking-single-byte-xor-encryption/" /> <author> <name>Alexander Wells</name> </author> <category term="security" /> <category term="cryptography" /> <summary> In this post we’ll cover how to decrypt messages that have been XOR encrypted using a single byte key, such as b7. While this might not sound that useful, it’s a pre-cursor to breaking XOR encryption that uses a repeating key, such as 84 d2 7a 09 4c. This post is also a solution to challenge 3 on the cryptopals website. This site is a great resource for hands on learning about cryptography. Th... </summary> </entry> <entry><title>Cryptography - PKCS#7 Padding</title><link href="https://node-security.com/posts/cryptography-pkcs-7-padding/" rel="alternate" type="text/html" title="Cryptography - PKCS#7 Padding" /><published>2021-12-03T01:06:44+11:00</published> <updated>2021-12-03T01:06:44+11:00</updated> <id>https://node-security.com/posts/cryptography-pkcs-7-padding/</id> <content src="https://node-security.com/posts/cryptography-pkcs-7-padding/" /> <author> <name>Alexander Wells</name> </author> <category term="security" /> <category term="cryptography" /> <summary> This post will show how PKCS#7 Padding works for block ciphers like DES and AES. This post includes visual examples and the edge case to be aware of. PKCS#7, which includes message padding, is defined in RFC 5652. What It’s For Examples Edge Case What It’s For Padding is used in certain block cipher modes (like ECB and CBC) when the plain-text needs to be a multiple of the block si... </summary> </entry> <entry><title>BaseN Converter</title><link href="https://node-security.com/posts/basen-converter/" rel="alternate" type="text/html" title="BaseN Converter" /><published>2021-11-30T19:22:14+11:00</published> <updated>2021-12-06T01:46:45+11:00</updated> <id>https://node-security.com/posts/basen-converter/</id> <content src="https://node-security.com/posts/basen-converter/" /> <author> <name>Alexander Wells</name> </author> <category term="tools" /> <summary> This tool can convert from UTF-8 strings to BaseN (any arbitrary base). It can also convert from BaseN to UTF-8 or HEX. The conversion alphabet can also be specified for these conversions as well. For example, when you convert ASCII to HEX, the output is made up of alphabet 0123456789abcdef. But if we like we can specify the output alphabet to be Gb$&amp;amp;c@=+9521ocx~. This would mean that the H... </summary> </entry> </feed>
