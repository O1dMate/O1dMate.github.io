<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://node-security.com/</id><title>Node Security</title><subtitle>Security and programming blog containing guides and examples of how to do various penetration testing and programming related tasks.</subtitle> <updated>2021-11-17T15:07:00+11:00</updated> <author> <name>Alexander Wells</name> <uri>https://node-security.com/</uri> </author><link rel="self" type="application/atom+xml" href="https://node-security.com/feed.xml"/><link rel="alternate" type="text/html" hreflang="en-US" href="https://node-security.com/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2021 Alexander Wells </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Maze Colouring with DFS and BFS</title><link href="https://node-security.com/posts/maze-colouring-with-dfs-and-bfs/" rel="alternate" type="text/html" title="Maze Colouring with DFS and BFS" /><published>2021-11-07T23:29:48+11:00</published> <updated>2021-11-12T00:36:13+11:00</updated> <id>https://node-security.com/posts/maze-colouring-with-dfs-and-bfs/</id> <content src="https://node-security.com/posts/maze-colouring-with-dfs-and-bfs/" /> <author> <name>Alexander Wells</name> </author> <category term="javascript" /> <category term="programming" /> <summary> Maze colouring using BFS (Breadth-First Search) and DFS (Depth-First Search). For reference, the mazes in the below examples were generated using the Randomized Depth-First Search (Recursive Backtracking) and Aldous-Broder algorithms. Colour Gradient Small Static Example Bigger Static Example DFS (Depth-First Search) Animation Recursive Backtracking Maze Generation BFS (B... </summary> </entry> <entry><title>FABRIK Algorithm</title><link href="https://node-security.com/posts/fabrik-algorithm/" rel="alternate" type="text/html" title="FABRIK Algorithm" /><published>2021-11-04T19:35:22+11:00</published> <updated>2021-11-04T19:35:22+11:00</updated> <id>https://node-security.com/posts/fabrik-algorithm/</id> <content src="https://node-security.com/posts/fabrik-algorithm/" /> <author> <name>Alexander Wells</name> </author> <category term="javascript" /> <category term="programming" /> <summary> In this post we’ll look at how to implement the FABRIK algorithm in 2D in JavaScript using the p5.js library for drawing. The Forward And Backward Reaching Inverse Kinematics (FABRIK) algorithm is a heuristic, iterative solver for the Inverse Kinematics problems. What is the Goal? Starting Configuration End Configuration The Algorithm Step 1 Step ... </summary> </entry> <entry><title>Android Hooking in Frida</title><link href="https://node-security.com/posts/android-hooking-in-frida/" rel="alternate" type="text/html" title="Android Hooking in Frida" /><published>2021-10-30T01:19:01+11:00</published> <updated>2021-11-17T14:03:07+11:00</updated> <id>https://node-security.com/posts/android-hooking-in-frida/</id> <content src="https://node-security.com/posts/android-hooking-in-frida/" /> <author> <name>Alexander Wells</name> </author> <category term="security" /> <category term="mobile" /> <summary> NOT COMPLETED, STILL UNDER CONSTRUCTION Intro guide on how to use Frida to hook Android applications at runtime to inject code and override methods. This guide already assumes you have frida installed and have frida-server installed on your android device. Basic Android Hooking Class Methods - WebView URL Script Breakdown Dealing with Types Class Constructo... </summary> </entry> <entry><title>JSP War Shell</title><link href="https://node-security.com/posts/jsp-war-shell/" rel="alternate" type="text/html" title="JSP War Shell" /><published>2021-10-25T20:09:48+11:00</published> <updated>2021-10-25T20:09:48+11:00</updated> <id>https://node-security.com/posts/jsp-war-shell/</id> <content src="https://node-security.com/posts/jsp-war-shell/" /> <author> <name>Alexander Wells</name> </author> <category term="security" /> <category term="web" /> <summary> How to generate a reverse, bind, and in-browser JSP War shell. This will cover generating payloads with MSFVenom and manually creating a war file from our own JSP file(s). JSP War Shell MSFVenom JSP War Reverse Shell JSP War Bind Shell Dealing with Errors JSP War Simple Browser Shell Example Shell Running on Windows Example Shell Running on ... </summary> </entry> <entry><title>SSH Port Forwarding</title><link href="https://node-security.com/posts/ssh-port-forwarding/" rel="alternate" type="text/html" title="SSH Port Forwarding" /><published>2021-10-22T00:17:04+11:00</published> <updated>2021-10-22T00:17:04+11:00</updated> <id>https://node-security.com/posts/ssh-port-forwarding/</id> <content src="https://node-security.com/posts/ssh-port-forwarding/" /> <author> <name>Alexander Wells</name> </author> <category term="security" /> <summary> Guide for basic SSH usage and SSH Port Forwarding. Basic SSH Connect to Host Connect to Host with Private Key Connect to Host with Certain KeyExchange &amp;amp; Cipher Copy Files to Host Copy Files from Host SSH Port Forwarding Local SSH Port Forward Remote SSH Port Forward Gateway Ports Basic SSH Connect to Host ssh... </summary> </entry> </feed>
