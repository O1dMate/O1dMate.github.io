<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://node-security.com/</id><title>Node Security</title><subtitle>Security and programming blog containing guides and examples of how to do various penetration testing and programming related tasks.</subtitle> <updated>2021-04-29T18:21:47+10:00</updated> <author> <name>Alexander Wells</name> <uri>https://node-security.com/</uri> </author><link rel="self" type="application/atom+xml" href="https://node-security.com/feed.xml"/><link rel="alternate" type="text/html" hreflang="en-US" href="https://node-security.com/"/> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2021 Alexander Wells </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Web Workers</title><link href="https://node-security.com/posts/web-workers/" rel="alternate" type="text/html" title="Web Workers" /><published>2021-04-29T17:40:58+10:00</published> <updated>2021-04-29T17:40:58+10:00</updated> <id>https://node-security.com/posts/web-workers/</id> <content src="https://node-security.com/posts/web-workers/" /> <author> <name>Alexander Wells</name> </author> <category term="javascript" /> <category term="programming" /> <summary> This guide will demonstrate how to setup Web Workers, dispatch tasks to workers, and send messages/results from workers to the main thread. HTML Page Worker Code Example Output HTML Page &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;Web Workers&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;script type="text/javascript"&amp;gt; console.log('Creating Web Worker(s)...'); ... </summary> </entry> <entry><title>Web-Sockets - Socket.IO</title><link href="https://node-security.com/posts/websockets-socketio/" rel="alternate" type="text/html" title="Web-Sockets - Socket.IO" /><published>2021-04-29T16:33:02+10:00</published> <updated>2021-04-29T16:33:02+10:00</updated> <id>https://node-security.com/posts/websockets-socketio/</id> <content src="https://node-security.com/posts/websockets-socketio/" /> <author> <name>Alexander Wells</name> </author> <category term="javascript" /> <category term="nodejs" /> <summary> This guide will demonstrate how to setup an express webserver that uses Socket.IO for communication. Installing Requirements Backend Code Frontend Code Standard HTML Page React Installing Requirements Install the express and socket.io packages using the following command: npm i express socket.io Backend Code const express = require('express'); const path... </summary> </entry> <entry><title>Web-Sockets - Native</title><link href="https://node-security.com/posts/websockets-native/" rel="alternate" type="text/html" title="Web-Sockets - Native" /><published>2021-04-29T11:28:07+10:00</published> <updated>2021-04-29T11:28:07+10:00</updated> <id>https://node-security.com/posts/websockets-native/</id> <content src="https://node-security.com/posts/websockets-native/" /> <author> <name>Alexander Wells</name> </author> <category term="javascript" /> <category term="nodejs" /> <summary> This guide will demonstrate how to setup an express webserver that uses built-in browser WebSockets for communication. Installing Requirements Backend Code Frontend Code Installing Requirements Install the express &amp;amp; ws packages using the following command: npm i express ws Backend Code const express = require('express'); const path = require('path'); const fs = require('fs')... </summary> </entry> <entry><title>Creating XLSX Documents in Javascript (Advanced)</title><link href="https://node-security.com/posts/creating-xlsx-documents-in-javascript-advanced/" rel="alternate" type="text/html" title="Creating XLSX Documents in Javascript (Advanced)" /><published>2021-04-24T17:39:40+10:00</published> <updated>2021-04-24T17:39:40+10:00</updated> <id>https://node-security.com/posts/creating-xlsx-documents-in-javascript-advanced/</id> <content src="https://node-security.com/posts/creating-xlsx-documents-in-javascript-advanced/" /> <author> <name>Alexander Wells</name> </author> <category term="javascript" /> <category term="programming" /> <summary> In this post we’ll look at how to create XLSX documents in JavaScript with more advanced features such as custom styling and formulas using the xlsx &amp;amp; js-xlsx packages. This works in both NodeJS and React. What we are Making Installing Requirements Data Types String Date Number Styling Font Alignment Fill Formulas ... </summary> </entry> <entry><title>Creating XLSX Documents in Javascript (Basic)</title><link href="https://node-security.com/posts/creating-xlsx-documents-in-javascript-basic/" rel="alternate" type="text/html" title="Creating XLSX Documents in Javascript (Basic)" /><published>2021-04-24T13:53:16+10:00</published> <updated>2021-04-24T13:53:16+10:00</updated> <id>https://node-security.com/posts/creating-xlsx-documents-in-javascript-basic/</id> <content src="https://node-security.com/posts/creating-xlsx-documents-in-javascript-basic/" /> <author> <name>Alexander Wells</name> </author> <category term="javascript" /> <category term="programming" /> <summary> In this post we’ll look at how to create basic XLSX documents in JavaScript using the xlsx package. This works in both NodeJS and React. What we are Making Installing Requirements The Code What we are Making We’ll look at how to add styling and formulas here in the advanced version of this guide. Installing Requirements Install the xlsx package using the following command: np... </summary> </entry> </feed>
