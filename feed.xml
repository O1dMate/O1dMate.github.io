<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://node-security.com/</id><title>Node Security</title><subtitle>Security and programming blog containing guides and examples of how to do various penetration testing and programming related tasks.</subtitle> <updated>2021-10-05T14:23:29+11:00</updated> <author> <name>Alexander Wells</name> <uri>https://node-security.com/</uri> </author><link rel="self" type="application/atom+xml" href="https://node-security.com/feed.xml"/><link rel="alternate" type="text/html" hreflang="en-US" href="https://node-security.com/"/> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2021 Alexander Wells </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Web App Checklist</title><link href="https://node-security.com/posts/web-app-checklist/" rel="alternate" type="text/html" title="Web App Checklist" /><published>2021-10-04T08:14:02+11:00</published> <updated>2021-10-04T18:17:01+11:00</updated> <id>https://node-security.com/posts/web-app-checklist/</id> <content src="https://node-security.com/posts/web-app-checklist/" /> <author> <name>Alexander Wells</name> </author> <category term="tools" /> <summary> This page is an interactive tool of this page. All the data for this checklist application is STORED CLIENT-SIDE. This application works by storing data in localStorage so that it’s persistent between reloads. You will need popups (dialogs) enabled for this application to work properly. New Project Delete ALL Projects Project Name Creation Time Checks Complete ... </summary> </entry> <entry><title>Web App Security</title><link href="https://node-security.com/posts/web-app-security/" rel="alternate" type="text/html" title="Web App Security" /><published>2021-09-29T18:01:50+11:00</published> <updated>2021-10-04T17:35:05+11:00</updated> <id>https://node-security.com/posts/web-app-security/</id> <content src="https://node-security.com/posts/web-app-security/" /> <author> <name>Alexander Wells</name> </author> <category term="security" /> <category term="web" /> <summary> General purpose guide for testing Web Applications. This list is not supposed to be exhaustive, nor is the information absolute. Each web application is different and the business case needs to be thought about when assessing the below items. The checks are not explained in depth on purpose and should be used as a reference only. HTTP Headers Server Version Disclosure X-Fra... </summary> </entry> <entry><title>Certificate Generate Pure NodeJS</title><link href="https://node-security.com/posts/certificate-generation-pure-nodejs/" rel="alternate" type="text/html" title="Certificate Generate Pure NodeJS" /><published>2021-09-21T01:07:50+11:00</published> <updated>2021-09-21T01:07:50+11:00</updated> <id>https://node-security.com/posts/certificate-generation-pure-nodejs/</id> <content src="https://node-security.com/posts/certificate-generation-pure-nodejs/" /> <author> <name>Alexander Wells</name> </author> <category term="security" /> <category term="web" /> <summary> This post will show example code of how to generate a Certificate Authority and Host Certificates (signed by the CA we generate) using NodeJS without using OpenSSL. This will be done using the node-forge npm module. This post will assume you are familiar with Certificates Authorities and Host Certificates already. There is not much explanation given as the code is well documented. Install P... </summary> </entry> <entry><title>Objection Quick Start</title><link href="https://node-security.com/posts/objection-quick-start/" rel="alternate" type="text/html" title="Objection Quick Start" /><published>2021-09-15T21:51:10+11:00</published> <updated>2021-09-15T21:51:10+11:00</updated> <id>https://node-security.com/posts/objection-quick-start/</id> <content src="https://node-security.com/posts/objection-quick-start/" /> <author> <name>Alexander Wells</name> </author> <category term="security" /> <category term="web" /> <summary> Still under construction Setup Install Objection Test Objection Find Application Attach to Application Android &amp;amp; iOS Files HTTP Server Other Android SSLPinning &amp;amp; Root Detection Android Hooking iOS SSLPinning &amp;amp; Jailbreak Detection iOS Application Info i... </summary> </entry> <entry><title>NodeJS Express Cert Based Mutual Auth</title><link href="https://node-security.com/posts/express-cert-based-mutual-auth/" rel="alternate" type="text/html" title="NodeJS Express Cert Based Mutual Auth" /><published>2021-09-07T08:25:38+11:00</published> <updated>2021-09-29T01:55:26+11:00</updated> <id>https://node-security.com/posts/express-cert-based-mutual-auth/</id> <content src="https://node-security.com/posts/express-cert-based-mutual-auth/" /> <author> <name>Alexander Wells</name> </author> <category term="javascript" /> <category term="nodejs" /> <summary> In this post we’ll look at how to add Certificate Based Mutual Authentication to an express HTTPS server. This will allow us to require a User Certificate before being able to communicate with out express server. This post will assume that you already know how to setup a HTTPS server using express. If you don’t know how to, you can learn here. Require Certificate Custom Authorisation Log... </summary> </entry> </feed>
