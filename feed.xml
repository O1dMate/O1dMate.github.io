<feed xmlns="http://www.w3.org/2005/Atom"> <id>/</id><title>Node Security</title><subtitle>Security and programming blog containing guides and examples of how to do various penetration testing and programming related tasks.</subtitle> <updated>2025-07-30T15:22:53+10:00</updated> <author> <name>Alexander Wells</name> <uri>/</uri> </author><link rel="self" type="application/atom+xml" href="/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="/"/> <generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator> <rights> © 2025 Alexander Wells </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Nmap Output Parser</title><link href="/posts/nmap-output-parser/" rel="alternate" type="text/html" title="Nmap Output Parser" /><published>2025-07-17T12:03:31+10:00</published> <updated>2025-07-17T12:03:31+10:00</updated> <id>/posts/nmap-output-parser/</id> <content src="/posts/nmap-output-parser/" /> <author> <name>Alexander Wells</name> </author> <category term="tools" /> <summary>Basic Nmap output parser that will group all the hosts for each port together so you can easily see all the hosts for each port. This is the reverse format the output is stored in. Instead of seeing the open ports for a host, you’ll see a host list for each open port. Paste Nmap Output Here Parse Parse (include Service Version in output) Parsed Results</summary> </entry> <entry><title>PDF Combiner</title><link href="/posts/pdf-combine/" rel="alternate" type="text/html" title="PDF Combiner" /><published>2025-07-17T12:03:31+10:00</published> <updated>2025-07-17T12:03:31+10:00</updated> <id>/posts/pdf-combine/</id> <content src="/posts/pdf-combine/" /> <author> <name>Alexander Wells</name> </author> <category term="tools" /> <summary>Simple client-side PDF document combiner that allows multiple PDF files to be combined into a single PDF file. All processing is done client-side using pdf-lib.js Upload PDF Combine Name Pages Size Order</summary> </entry> <entry><title>JSON Parse &amp; Filter</title><link href="/posts/json-parse-and-filter/" rel="alternate" type="text/html" title="JSON Parse &amp;amp; Filter" /><published>2025-06-22T18:06:07+10:00</published> <updated>2025-07-19T17:47:11+10:00</updated> <id>/posts/json-parse-and-filter/</id> <content src="/posts/json-parse-and-filter/" /> <author> <name>Alexander Wells</name> </author> <category term="tools" /> <summary>A simple JSON parser and that acts like jq and can be used in the browser. ALL processing is done client side using JavaScript. No data is sent to any server nor stored in local or session storage. JSON Input Beautify Filter Expression Filtered Output Functions Supported String.parseInt() can be called on Strings to convert a value to a Integer. String.parseFloat() can be ca...</summary> </entry> <entry><title>Password Word List Generator</title><link href="/posts/password-word-list-generator/" rel="alternate" type="text/html" title="Password Word List Generator" /><published>2024-12-07T17:29:01+10:00</published> <updated>2024-12-07T17:29:01+10:00</updated> <id>/posts/password-word-list-generator/</id> <content src="/posts/password-word-list-generator/" /> <author> <name>Alexander Wells</name> </author> <category term="tools" /> <summary>Tool for generating a word list of password candidates based off of a seed word. The output list can be used as a word list in tools like hashcat with rules to crack hashes. All processing is done client-side via JavaScript. Input Word(s) Multiple words may be entered on separate lines. Results</summary> </entry> <entry><title>Bloodhound Bulk Mark as Owned</title><link href="/posts/bloodhound-bulk-mark-as-owned/" rel="alternate" type="text/html" title="Bloodhound Bulk Mark as Owned" /><published>2024-09-26T19:57:42+10:00</published> <updated>2024-09-26T19:57:42+10:00</updated> <id>/posts/bloodhound-bulk-mark-as-owned/</id> <content src="/posts/bloodhound-bulk-mark-as-owned/" /> <author> <name>Alexander Wells</name> </author> <category term="security" /> <category term="windows" /> <summary>In this post we’ll look at how to bulk mark users are owned when using Bloodhound. An example scenario would be you have done a password spray (or password audit) and found the password to a large amount of accounts. From here you want to see what access you have, and perhaps even privilege escalation in the domain. However, you don’t want to mark 100+ accounts as owned in the Bloodhound GUI. ...</summary> </entry> </feed>
