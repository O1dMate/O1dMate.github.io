(this["webpackJsonpoldmates-templates"]=this["webpackJsonpoldmates-templates"]||[]).push([[0],{79:function(e,t,n){e.exports=n(98)},97:function(e,t,n){},98:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(8),s=n.n(o),i=n(145),c=n(72),l=n(74),p=n(66),d=n(67),h=n(75),u=n(73),y=n(7),m=n(38);function g(){}g.prototype.getCryptographyData=function(){return[{type:"h3",data:"JavaScript Crypto Module"},{type:"hr"},{type:"h6",data:"Symmetric Encryption (AES-256 Counter-Mode)"},{type:"code",mode:"javascript",data:f},{type:"br"},{type:"hr"},{type:"h6",data:"Hashing (SHA256)"},{type:"code",mode:"javascript",data:b},{type:"br"},{type:"hr"},{type:"h6",data:"Elliptic Curve Diffie-Hellman"},{type:"code",mode:"javascript",data:S}]},g.prototype.getHttpData=function(){return[{type:"h3",data:"Express HTTP Server"},{type:"hr"},{type:"h6",data:"Server Code"},{type:"code",mode:"javascript",data:v},{type:"br"}]},g.prototype.getHttpsData=function(){return[{type:"h3",data:"Express HTTPS Server"},{type:"hr"},{type:"h6",data:"Server Code"},{type:"code",mode:"javascript",data:w},{type:"br"},{type:"h6",data:"Config File"},{type:"code",mode:"javascript",data:k}]},g.prototype.getTcpSocketData=function(){return[{type:"h3",data:"TCP Sockets"},{type:"hr"},{type:"h6",data:"TCP Server"},{type:"code",mode:"javascript",data:E},{type:"br"},{type:"hr"},{type:"h6",data:"TCP Client"},{type:"code",mode:"javascript",data:T}]},g.prototype.getReactChartData=function(){return[{type:"h3",data:"React-ChartJS-2"},{type:"hr"},{type:"h6",data:"Coming Soon"}]},g.prototype.getXlsxData=function(){return[{type:"h3",data:"JavaScript XLSX Module"},{type:"hr"},{type:"h6",data:"Create & Export XLSX Document"},{type:"code",mode:"javascript",data:D},{type:"br"},{type:"h6",data:"The above code will produce this document:"},{type:"image",data:"img/xlsx.png",style:"fill"}]},g.prototype.getUtilFunctionData=function(){return[{type:"h3",data:"Utility Functions"},{type:"hr"},{type:"h6",data:"Sort a list of Objects by a certain key"},{type:"code",mode:"javascript",data:O}]},g.prototype.getSshData=function(){return[{type:"h3",data:"SSH Port Forwarding"},{type:"hr"},{type:"br"},{type:"h4",data:"Local Port Forward"},{type:"br"},{type:"p",data:x},{type:"br"},{type:"p",data:P},{type:"br"},{type:"p",data:C},{type:"code",mode:"ruby",showLineNumbers:!1,fontSize:18,data:R},{type:"br"},{type:"p",data:j},{type:"br"},{type:"hr"},{type:"br"},{type:"h4",data:"Remote Port Forward"},{type:"br"},{type:"p",data:L},{type:"br"},{type:"p",data:q},{type:"code",mode:"ruby",showLineNumbers:!1,fontSize:18,data:H},{type:"br"},{type:"p",data:I},{type:"br"},{type:"p",data:N},{type:"br"},{type:"p",data:F},{type:"code",mode:"ruby",showLineNumbers:!1,fontSize:18,data:_},{type:"br"}]};var f="\nconst crypto = require('crypto');\n\nlet key = Buffer.from('0000111122223333444455556666777788889999aaaabbbbccccddddeeeeffff', 'hex')\nlet iv = Buffer.from('0123456789abcdef0123456789abcdef', 'hex')\nlet secret_msg = Buffer.from('To be Encrypted!', 'utf-8');\n\n// Encrypt\nlet cipher = crypto.createCipheriv('aes-256-ctr', key, iv);\nlet encrypted = cipher.update(secret_msg);\n\n// Decrypt\nlet decipher = crypto.createDecipheriv('aes-256-ctr', key, iv);\nlet decrypted = decipher.update(encrypted, 'hex');\n\nconsole.log(`\\nEncryption Key: ${key.toString('hex')}`)\nconsole.log(`IV: \\t\\t${iv.toString('hex')}\\n`)\n\nconsole.log(`Plain-text: \\t${secret_msg.toString('hex')}`);\nconsole.log(`Encrypted: \\t${encrypted.toString('hex')}`);\nconsole.log(`Encrypted: \\t${encrypted.toString('base64')}`);\nconsole.log(`Decrypted: \\t${decrypted.toString('utf-8')}\\n`);\n",b="\nconst crypto = require('crypto');\n\n// Get a list of supported Hash Algorithms\nconsole.log(crypto.getHashes());\n\nlet msgToHash = 'Password1';\n\nlet hashFunction = crypto.createHash('sha256');\nhashFunction.update(msgToHash);\nconsole.log(hashFunction.digest('hex'));\n",S="\nconst crypto = require('crypto');\n\nconst alice = crypto.createECDH('sect571k1');\nalice.generateKeys();\n\nconst bob = crypto.createECDH('sect571k1');\nbob.generateKeys();\n\nconsole.log(\"\\nAlice Public:\", alice.getPublicKey().toString('base64'))\nconsole.log(\"Alice Private:\", alice.getPrivateKey().toString('base64'))\nconsole.log(\"Bob Public:\", bob.getPublicKey().toString('base64'))\nconsole.log(\"Bob Private:\", bob.getPrivateKey().toString('base64'))\n\nconsole.log(\"Shared Secret: \", alice.computeSecret(bob.getPublicKey(), null, 'base64'))\nconsole.log(\"Shared Secret: \", bob.computeSecret(alice.getPublicKey(), null, 'base64'), \"\\n\")\n",v="\nconst express = require('express');\nconst bodyParser = require('body-parser');\n\nconst app = express();\nconst server = require('http').Server(app);;\n\n\n// Support JSON encoded POST request bodies\napp.use(bodyParser.json());\n\n// Handle decode error incase an invalid URI is sent.\napp.use((req, res, next) => {\n\ttry {\n\t\tdecodeURIComponent(req.path)\n\t\tnext();\n\t} catch (err) {\n\t\tres.sendStatus(404);\n\t}\n})\n\napp.get('/', (req, res) => {\n\tres.redirect('home');\n});\n\napp.get('/home', (req, res) => {\n\tres.send('<h1>Home</h1>');\n});\n \nserver.listen(80, () => {\n\tconsole.log('[-] Server Listening on Port 127.0.0.1:80');\n});\n",w="\nconst configs = require('./configs/config');\nconst express = require('express');\nconst helmet = require('helmet');\nconst csp = require('helmet-csp')\nconst bodyParser = require('body-parser');\nconst fs = require('fs');\nconst path = require('path');\n\nconst app = express();\nvar server = null;\n\n// Determine if the the server will have TLS Enabled.\nif (!configs.devMode) {\n\t// Load the TLS cert\n\tlet serverOptions = {\n\t\tcert: fs.readFileSync(path.join(__dirname, configs.certPath)),\n\t\tkey: fs.readFileSync(path.join(__dirname, configs.keyPath)),\n\t\tsecureProtocol: 'TLSv1_2_method',\n\t}\n\n\tserver = require('https').Server(serverOptions, app);\n\n\tapp.use(helmet.hsts({\n\t\tmaxAge: 31536000,\n\t\tincludeSubDomains: true,\n\t\tpreload: true\n\t}));\n} else {\n\tserver = require('http').Server(app);\n}\n\n// Determine the Web Server port\nconst SERVER_PORT = (configs.devMode ? configs.devPort : configs.prodPort);\n\n// Support JSON encoded POST request bodies\napp.use(bodyParser.json());\n\n// Harden the Server\napp.use(helmet.xssFilter())\napp.use(helmet.noSniff())\napp.use(helmet.frameguard({ action: 'deny' }))\napp.use(helmet.referrerPolicy({ policy: 'no-referrer' }))\napp.use(csp({\n\tdirectives: {\n\t\tdefaultSrc: [`'none'`],\n\t\tconnectSrc: [`'self'`],\n\t\tstyleSrc: [`'self'`],\n\t\timgSrc: [`'self'`],\n\t\tscriptSrc: [`'self'`],\n\t\tupgradeInsecureRequests: true,\n\t}\n}))\napp.set('etag', false);\napp.set('x-powered-by', false);\n\n// Handle decode error incase an invalid URI is sent.\napp.use((req, res, next) => {\n\ttry {\n\t\tdecodeURIComponent(req.path)\n\t\tnext();\n\t} catch (err) {\n\t\tres.sendStatus(404);\n\t}\n})\n\napp.get('/', (req, res) => {\n\tres.redirect('home');\n});\n\napp.get('/home', (req, res) => {\n\tres.send('<h1>Home</h1>');\n});\n\napp.get('/query/:idOne/:idTwo?/:idThree?', (req, res) => {\n\t// For the URI: /query/1/this/2?u=my%20data&help=true\n\t// req.params = { idOne: '1', idTwo: 'this', idThree: '2' }\n\t// req.query = { u: 'my data', help: 'true' }\n\n\t// Send custom HTTP Status code\n\tres.status(406).send('OK');\n})\n\n// Send a file to the user.\napp.get('/favicon.ico', (req, res) => {\n\tres.sendFile(path.join(__dirname, './images/favicon.ico'));\n})\n\napp.post('/login', (req, res) => {\n\ttry {\n\t\t// Ensure we receive the right params\n\t\tif (req.body && !req.body.hasOwnProperty('username') && req.body.hasOwnProperty('password')) {\n\t\t\t// Get the params from the request\n\t\t\tlet username = req.body.username.toString() || '';\n\t\t\tlet password = req.body.password.toString() || '';\n\n\t\t\t// Perform check to see if the username & password is correct.\n\t\t\tDatabase.user.checkCredentials(username, password, (err) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tres.send({ success: false });\n\t\t\t\t} else {\n\t\t\t\t\t// Generate the session token and calculate expiration date.\n\t\t\t\t\tlet sessionToken = util.randomString(configs.sessionTokenLength);\n\t\t\t\t\tlet expirationTime = (new Date()).getTime() + configs.sessionLength;\n\n\t\t\t\t\t// Store the session & expiration time in the DB.\n\t\t\t\t\tDatabase.user.createSession(sessionToken, new Date(expirationTime));\n\n\t\t\t\t\t// Login was successful, send the cookie back to the user.\n\t\t\t\t\tres.cookie('session-token', sessionToken, {\n\t\t\t\t\t\tsecure: true,\n\t\t\t\t\t\thttpOnly: true,\n\t\t\t\t\t\tsameSite: 'strict',\n\t\t\t\t\t\tmaxAge: configs.sessionLength,\n\t\t\t\t\t}).send({ success: true });\n\t\t\t\t}\n\t\t\t})\n\t\t} else {\n\t\t\tres.send({ success: false });\n\t\t}\n\t} catch (err) {\n\t\tres.send({ success: false });\n\t}\n});\n\n\nserver.listen(SERVER_PORT, () => {\n\tconsole.log(`[-] Server Listening on Port ${SERVER_PORT}`);\n});\n",k="\nconst configs = {\n\t// Server Settings\n\tdevMode: true,\n\tdevPort: 80,\n\tprodPort: 443,\n\tcertPath: './cert/cert.crt',\n\tkeyPath: './cert/cert.key',\n\n\t// Session Configs\n\tsessionTokenLength: 64,\n\tsessionLength: 3600000,     // Session Length in miliseconds\n}\n\nObject.freeze(configs);\n\nmodule.exports = configs;\n",E="\nconst net = require('net');\n\nconst HOST = '127.0.0.1';\nconst PORT = 49494;\n\nnet.createServer((socket) => {\n\tconsole.log(`CONNECTED: ${socket.remoteAddress}: ${socket.remotePort}`);\n\n\tsocket.on('data', (data) => {\n\t\tconsole.log(`DATA ${socket.remoteAddress}: ${data}`);\n\n\t\t// Send the same message back to the client.\n\t\tsocket.write(`FROM SERVER - ${data}`);\n\t});\n\n\tsocket.on('error', (error) => {\n\t\tconsole.error(error);\n\t});\n\n\tsocket.on('close', (data) => {\n\t\tconsole.log(`CLOSED: ${socket.remoteAddress}: ${socket.remotePort}\\n`);\n\t});\n}).listen(PORT, HOST);\n\nconsole.log(`Server listening on  ${HOST}: ${PORT}`);\n",T="\nconst net = require('net');\n\nconst HOST = '127.0.0.1';\nconst PORT = 49494;\n\nlet socket = new net.Socket();\n\nsocket.connect(PORT, HOST, () => {\n\tconsole.log(`CONNECTED TO: ${HOST}: ${PORT}`);\n\n\t// Send a message to the server\n\tsocket.write(\"G'day Server\");\n});\n\nsocket.on('data', (data) => {\n\tconsole.log(`RECEIVED: ${data}`);\n\n\t// Close the connection\n\tsocket.destroy();\n});\n\nsocket.on('close', () => {\n\tconsole.log('Connection closed');\n});\n\nsocket.on('error', (err) => {\n\tconsole.log(`Connection Error: ${err}`);\n});\n",D="\n// import XLSX from 'xlsx'; // Use this for React\nconst XLSX = require('xlsx');\n\n// Create a new blank XLSX Document\nlet workbook = XLSX.utils.book_new();\n\n// The data that will be added to the sheet.\nlet dataForSheet = [\n\t['Column 1', 'Column 2','Column 3','Column 4','Column 5','Column 6'],\n\t['Data 1', 'Data 2','Data 3','Data 4','Data 5','Data 6'],\n\t['Data 7', 'Data 8','Data 9','Data 10'],\n\t['Data 11', 'Data 12','','','Data 13','Data 14','Data 15'],\n];\n\n// Convert the Array data to a sheet.\nlet sheetData = XLSX.utils.aoa_to_sheet(dataForSheet);\n\n// Add the sheet to the workbook\nXLSX.utils.book_append_sheet(workbook, sheetData, 'Sheet 1');\n\n// Save the XLSX File.\nXLSX.writeFile(workbook, 'FILE_NAME.xlsx');\n",O="\n// Sort a list of Objects by a certain key.\nfunction sortListByKey(list, keyToSortBy, reverse) {\n\tif (reverse) {\n\t\t// Sort the list in reverse order (Highest to Lowest)\n\t\tlist.sort((a,b) => {\n\t\t\tif (a[keyToSortBy] > b[keyToSortBy]) return -1;\n\t\t\telse if (a[keyToSortBy] < b[keyToSortBy]) return 1;\n\t\t\treturn 0;\n\t\t})\n\t} else {\n\t\t// Sort the list in normal order (Lowest to Highest)\n\t\tlist.sort((a,b) => {\n\t\t\tif (a[keyToSortBy] > b[keyToSortBy]) return 1;\n\t\t\telse if (a[keyToSortBy] < b[keyToSortBy]) return -1;\n\t\t\treturn 0;\n\t\t})\n\t}\n}\n",x="Let's say the remote host is listening on localhost:3000 and you want to connect to it from your local computer. Perhaps there is a database listening on this port and you don't want to expose it to the network/internet.",P="Using a Local Port Forward we can setup a listener on our local computer, which when we connect to will go through the SSH tunnel to the listener on the remote host.",C="Here is the command that will allow us to do that:",R="ssh -L 1337:localhost:3000 USER@REMOTE_HOST_IP",j="This command will setup a listener on your local machine on localhost:1337. Connecting to this will be the same as if you connected to localhost: 3000 on the remote host.",L="Let's say you have an application listening on localhost:9595 on your local computer and your friend wants to connect to your server. However, both you and your friend networks are behind NAT(i.e.two home networks anywhere in the world) so you can't directly connect to each other.",q="On your computer:",H="ssh -R 9000:localhost:9595 USER@REMOTE_HOST_IP",I="This command will setup a listener on the remote host on localhost:9000. Connecting to the remote host on localhost: 9000 will be the same as if you connected to localhost: 9595 on your local machine.",N="This situation is now the same as a Local Port Forward. The remote host is now listening on localhost: 9000. Your friend can now create a new listener on their computer using a Local Port Forward.",F="On your friends computer:",_="ssh -L 1337:localhost:9000 USER@REMOTE_HOST_IP",A=new g,B={Home:{link:"home",rawData:[]},JavaScript:{NodeJS:{Cryptography:{link:"crypto",rawData:A.getCryptographyData()},"HTTP Server":{link:"http-server",rawData:A.getHttpData()},"HTTPS Server":{link:"https-server",rawData:A.getHttpsData()},"TCP Sockets":{link:"tcp-sockets",rawData:A.getTcpSocketData()}},ReactJS:{"React-ChartJS-2":{link:"react-chartjs-2",rawData:A.getReactChartData()}},"XLSX Export":{link:"xlsx",rawData:A.getXlsxData()},"Utility Functions":{link:"util",rawData:A.getUtilFunctionData()}},Networking:{"SSH Port Forwarding":{link:"ssh-portforward",rawData:A.getSshData()}}};function X(){return B}var M=n(52),J=n(55),$=n(24),U=n(136),z=n(13),K=n(142),G=n(148),V=n(139),W=n(141),Y=n(140),Q=n(146),Z=n(147),ee=n(144),te=n(137),ne=n(149),ae=n(138),re=n(143),oe=n(46),se=n(70),ie=n.n(se),ce=n(69),le=n.n(ce),pe=n(71),de=n.n(pe),he=n(68),ue=n.n(he);n(91),n(92),n(93);var ye=function(e){switch(e.element.type){case"h1":return r.a.createElement(oe.a,{variant:"h1"},e.element.data);case"h2":return r.a.createElement(oe.a,{variant:"h2"},e.element.data);case"h3":return r.a.createElement(oe.a,{variant:"h3",style:{letterSpacing:"1.5px"}},e.element.data);case"h4":return r.a.createElement(oe.a,{variant:"h4"},e.element.data);case"h5":return r.a.createElement(oe.a,{variant:"h5"},e.element.data);case"h6":return r.a.createElement(oe.a,{variant:"h6"},e.element.data);case"body1":return r.a.createElement(oe.a,{variant:"body1"},e.element.data);case"body2":return r.a.createElement(oe.a,{variant:"body2"},e.element.data);case"list":return r.a.createElement("ul",{style:{color:"#f6f6fa"}},e.element.data.map((function(e,t){return r.a.createElement("li",{key:"list_index_".concat(t)},r.a.createElement(oe.a,{variant:"subtitle1"},e))})));case"hr":return r.a.createElement("hr",null);case"br":return r.a.createElement("br",null);case"code":return r.a.createElement(ue.a,{mode:e.element.mode||"javascript",theme:"monokai",fontSize:e.element.hasOwnProperty("fontSize")?e.element.fontSize:14,setOptions:{tabSize:4,showLineNumbers:!e.element.hasOwnProperty("showLineNumbers")||e.element.showLineNumbers},readOnly:!0,focus:!1,width:"100%",maxLines:1/0,value:e.element.data||""});case"image":return r.a.createElement("img",{src:e.element.data,alt:""});default:return r.a.createElement(oe.a,{variant:"subtitle1"},e.element.data)}},me=Object(U.a)((function(e){var t,n;return{root:{display:"flex"},drawer:(t={},Object($.a)(t,e.breakpoints.up("xl"),{width:220,flexShrink:0}),Object($.a)(t,"backgroundColor","#2e2e38"),t),appBar:(n={},Object($.a)(n,e.breakpoints.up("xl"),{width:"calc(100% - ".concat(220,"px)"),marginLeft:220}),Object($.a)(n,"backgroundColor","#9905AD"),n),menuButton:Object($.a)({color:"#f6f6fa",marginRight:e.spacing(2)},e.breakpoints.up("xl"),{display:"none"}),drawerPaper:{width:220,backgroundColor:"#2e2e38",borderRight:"1px solid rgba(255,255,255,0.5)"},content:{flexGrow:1,padding:e.spacing(3)},link:{textDecoration:"none"},toolbar:e.mixins.toolbar}}));var ge=function(e){var t=e.window,n=me(),a=Object(z.a)(),o=r.a.useState({}),s=Object(J.a)(o,2),i=s[0],c=s[1],l=r.a.useState(!1),p=Object(J.a)(l,2),d=p[0],h=p[1],u=function(){h(!d)},y=void 0!==t?function(){return t().document.body}:void 0,g=r.a.createElement("div",null,r.a.createElement("div",{className:n.toolbar}),r.a.createElement(Y.a,null),function e(t){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,o=[];return Object.keys(t).forEach((function(s,l){Object.keys(t[s]).length>0&&!t[s].hasOwnProperty("rawData")?o.push(r.a.createElement(r.a.Fragment,{key:"".concat(a,"_").concat(l)},r.a.createElement(te.a,null,r.a.createElement(ne.a,{button:!0,onClick:function(){return c(Object(M.a)(Object(M.a)({},i),{},Object($.a)({},s,!i[s])))},className:n.link},r.a.createElement(ae.a,{primary:s,className:n.link}),i[s]?r.a.createElement(le.a,{style:{color:"#f6f6fa"}}):r.a.createElement(ie.a,{style:{color:"#f6f6fa"}}))),r.a.createElement(V.a,{in:!!i[s],timeout:"auto",unmountOnExit:!0},e(t[s],a)))):o.push(r.a.createElement(m.b,{to:t[s].link,key:"".concat(a,"_").concat(l),style:{paddingLeft:"".concat(12*a,"px")},className:n.link},r.a.createElement(ne.a,{button:!0,className:n.link},r.a.createElement(ae.a,{primary:s}))))})),r.a.createElement(te.a,{style:{paddingLeft:"".concat(12*a,"px")}},o)}(X()),r.a.createElement(Y.a,null)),f=e.rawData&&Array.isArray(e.rawData)?e.rawData:[{type:"h3",data:"No Data for Page"}],b=e.breadcrumbs&&Array.isArray(e.breadcrumbs)?e.breadcrumbs:[];return console.log(e),console.log(b),r.a.createElement("div",{className:n.root},r.a.createElement(W.a,null),r.a.createElement(K.a,{position:"fixed",className:n.appBar},r.a.createElement(re.a,null,r.a.createElement(ee.a,{color:"inherit",edge:"start",onClick:u,className:n.menuButton},r.a.createElement(de.a,null)),r.a.createElement(m.b,{to:"/home",style:{textDecoration:"none"}},r.a.createElement(oe.a,{variant:"h6",noWrap:!0,style:{cursor:"pointer"}},"Oldmate's Templates")))),r.a.createElement("nav",{className:n.drawer},r.a.createElement(Z.a,{xlUp:!0},r.a.createElement(Q.a,{container:y,variant:"temporary",anchor:"rtl"===a.direction?"right":"left",open:d,onClose:u,classes:{paper:n.drawerPaper},ModalProps:{keepMounted:!0}},g)),r.a.createElement(Z.a,{lgDown:!0},r.a.createElement(Q.a,{classes:{paper:n.drawerPaper},variant:"permanent",open:!0},g))),r.a.createElement("main",{className:n.content},r.a.createElement(re.a,null),r.a.createElement(G.a,null,r.a.createElement(oe.a,null),b.map((function(e,t){return r.a.createElement(oe.a,{key:t},e)}))),r.a.createElement("br",null),f.map((function(e,t){return r.a.createElement(r.a.Fragment,{key:t},r.a.createElement(ye,{element:e}))}))))},fe=[{type:"h3",data:"Home"},{type:"hr"},{type:"p",data:"Welcome to my template site. I've built this static site with a simple goal in mind. I wanted to stop Googling things I've already found the answer to previously. It's also to help me stop searching for code that I have already done before. If I've used a certain library or framework and it's more then a few lines, then I'm gonna try and put the boiler plate code here so that I don't have to search through old projects each time. This site isn't supposed to be a guide or tutorial (it might be in some spots though), it's supposed to be a refresher / time saver."},{type:"br"},{type:"p",data:"More content will be added over time."},{type:"br"},{type:"hr"},{type:"h4",data:"What things are on the site?"},{type:"list",data:["Code Snippets","Random functions","Refreshes for certain topics","Quick starter code for certain libraries"]},{type:"hr"},{type:"h4",data:"What sort of topics are here?"},{type:"list",data:["General Programming","JavaScript","NodeJS","React (I'm a JS fan if you haven't noticed by now)","Networking"]},{type:"hr"},{type:"h4",data:"About Me"},{type:"list",data:["Building web applications is something I've really been getting into recently because you can make almost anything. React + Node = Make anything.","Cryptography - I enjoy implementing algorithms myself to understand how they work. Some ones I've done in the past are DES, AES, RSA & SHA256.","I love programming because it gives me the freedom to make anything that I want. I think almost everyone who doesn't do programming doesn't understand the power of it and how much you can actually create when you learn some basics and starting making things."]},{type:"hr"},{type:"h4",data:"Why JavaScript is Amazing"},{type:"list",data:["You don't need to waste time setting up an environment. No messing around setting up an interpreter or compiler. Just install a browser and you're set (worst case use a pre-installed browser).","It's very versatile. Let's say you want to create project that requires a back-end web server, admin web portal and a desktop app. You could create the whole thing end-to-end in JavaScript using React, Node & Electron.","I believe the level of abstraction in JavaScript is spot on. The language has lots of quality of life features built-in for things like Arrays (filter, map, reduce, forEach, join, slice, splice, indexOf, flat, etc), Strings (match, join, split, endsWith, startsWith, trim, etc), functions/classes are objects so it's easy to store and pass them around, you can do OO or Functional or hybrid style programming, easy regexing, libraries for literally EVERYTHING, and lots more. It does all this yet I don't believe the language/syntax feels childish or like it's holding your hand.","The documentation is very extensive. Mozilla docs for JavaScript are fantasic for built-in things. If you have a JS question, it's extremely likely there's already an answer for it online.","The last thing I want to mention is being able to quickly write code in the browser console to check if something will work. Maybe you just searched online for how to use some built-in array function. You can test it really easily in the browser before adding it to your actual code."]},{type:"hr"},{type:"p",data:"Feel free to have a look around and use what you like!"}],be=function(e){Object(h.a)(n,e);var t=Object(u.a)(n);function n(e){var a;return Object(p.a)(this,n),(a=t.call(this,e)).siteData=X(),a.cleanName=function(e){return e.toLowerCase().match(/[a-z0-9-]+/).join("")},a.state={},a}return Object(d.a)(n,[{key:"buildRouterRecursive",value:function(e,t,n){var a=this;Object.keys(e).forEach((function(o,s){if(Object.keys(e[o]).length>0&&!e[o].hasOwnProperty("rawData"))n.push(o),a.buildRouterRecursive(e[o],t,n),n.pop();else{n.push(o);var i=a.cleanName(o),c=r.a.createElement(y.b,{key:"".concat(i,"_").concat(s),path:"/".concat(e[o].link)},r.a.createElement(ge,{breadcrumbs:Object(l.a)(n),rawData:e[o].rawData}));t.push(c),n.pop()}}))}},{key:"render",value:function(){var e=[];return this.buildRouterRecursive(this.siteData,e,[]),r.a.createElement(m.a,null,r.a.createElement(y.d,null,r.a.createElement(y.b,{path:"/home"},r.a.createElement(ge,{breadcrumbs:["Home"],rawData:fe})),e,r.a.createElement(y.a,{to:"/home"})))}}]),n}(r.a.Component),Se=(n(97),Object(c.a)({typography:{fontFamily:"Oxygen",useNextVariants:!0},overrides:{MuiTypography:{h1:{color:"#f6f6fa"},h2:{color:"#f6f6fa"},h3:{color:"#f6f6fa"},h4:{color:"#f6f6fa"},h5:{color:"#f6f6fa"},h6:{color:"#f6f6fa"},body1:{color:"#f6f6fa"},body2:{color:"#f6f6fa"},subtitle1:{color:"#f6f6fa"}},MuiDivider:{root:{backgroundColor:"rgba(255,255,255,0.5)"}},MuiBreadcrumbs:{root:{color:"#f6f6fa"}},MuiTouchRipple:{root:{color:"#f6f6fa"}},MuiIconButton:{root:{padding:0,marginLeft:10,marginRight:10,color:"#f6f6fa","&:hover":{boxShadow:"0 0 24px 0px"}}}}}));s.a.render(r.a.createElement(i.a,{theme:Se},r.a.createElement(r.a.Fragment,null,r.a.createElement(be,null))),document.getElementById("root"))}},[[79,1,2]]]);