(this["webpackJsonpoldmates-templates"]=this["webpackJsonpoldmates-templates"]||[]).push([[0],{69:function(e,t,n){e.exports=n(87)},86:function(e,t,n){},87:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(7),s=n.n(o),c=n(128),i=n(62),l=n(57),p=n(58),d=n(65),h=n(63),u=n(6),y=n(39);var m={JavaScript:{NodeJS:{Cryptography:{link:"crypto",rawData:[{type:"h3",data:"JavaScript Crypto Module"},{type:"hr"},{type:"h6",data:"Symmetric Encryption (AES-256 Counter-Mode)"},{type:"code",mode:"javascript",data:"\nconst crypto = require('crypto');\n\nlet key = Buffer.from('0000111122223333444455556666777788889999aaaabbbbccccddddeeeeffff', 'hex')\nlet iv = Buffer.from('0123456789abcdef0123456789abcdef', 'hex')\nlet secret_msg = Buffer.from('To be Encrypted!', 'utf-8');\n\n// Encrypt\nlet cipher = crypto.createCipheriv('aes-256-ctr', key, iv);\nlet encrypted = cipher.update(secret_msg);\n\n// Decrypt\nlet decipher = crypto.createDecipheriv('aes-256-ctr', key, iv);\nlet decrypted = decipher.update(encrypted, 'hex');\n\nconsole.log(`\\nEncryption Key: ${key.toString('hex')}`)\nconsole.log(`IV: \\t\\t${iv.toString('hex')}\\n`)\n\nconsole.log(`Plain-text: \\t${secret_msg.toString('hex')}`);\nconsole.log(`Encrypted: \\t${encrypted.toString('hex')}`);\nconsole.log(`Encrypted: \\t${encrypted.toString('base64')}`);\nconsole.log(`Decrypted: \\t${decrypted.toString('utf-8')}\\n`);\n"},{type:"br"},{type:"hr"},{type:"h6",data:"Hashing (SHA256)"},{type:"code",mode:"javascript",data:"\nconst crypto = require('crypto');\n\n// Get a list of supported Hash Algorithms\nconsole.log(crypto.getHashes());\n\nlet msgToHash = 'Password1';\n\nlet hashFunction = crypto.createHash('sha256');\nhashFunction.update(msgToHash);\nconsole.log(hashFunction.digest('hex'));\n"},{type:"br"},{type:"hr"},{type:"h6",data:"Elliptic Curve Diffie-Hellman"},{type:"code",mode:"javascript",data:"\nconst crypto = require('crypto');\n\nconst alice = crypto.createECDH('sect571k1');\nalice.generateKeys();\n\nconst bob = crypto.createECDH('sect571k1');\nbob.generateKeys();\n\nconsole.log(\"\\nAlice Public:\", alice.getPublicKey().toString('base64'))\nconsole.log(\"Alice Private:\", alice.getPrivateKey().toString('base64'))\nconsole.log(\"Bob Public:\", bob.getPublicKey().toString('base64'))\nconsole.log(\"Bob Private:\", bob.getPrivateKey().toString('base64'))\n\nconsole.log(\"Shared Secret: \", alice.computeSecret(bob.getPublicKey(), null, 'base64'))\nconsole.log(\"Shared Secret: \", bob.computeSecret(alice.getPublicKey(), null, 'base64'), \"\\n\")\n"}]},"Express Server":{link:"http-server",rawData:[{type:"h3",data:"Express HTTP(S) Server"},{type:"hr"},{type:"h6",data:"Server Code"},{type:"code",mode:"javascript",data:"\nconst configs = require('./configs/config');\nconst express = require('express');\nconst helmet = require('helmet');\nconst csp = require('helmet-csp')\nconst bodyParser = require('body-parser');\nconst fs = require('fs');\nconst path = require('path');\n\nconst app = express();\nvar server = null;\n\n// Determine if the the server will have TLS Enabled.\nif (!configs.devMode) {\n\t// Load the TLS cert\n\tlet serverOptions = {\n\t\tcert: fs.readFileSync(path.join(__dirname, configs.certPath)),\n\t\tkey: fs.readFileSync(path.join(__dirname, configs.keyPath)),\n\t\tsecureProtocol: 'TLSv1_2_method',\n\t}\n\n\tserver = require('https').Server(serverOptions, app);\n\n\tapp.use(helmet.hsts({\n\t\tmaxAge: 31536000,\n\t\tincludeSubDomains: true,\n\t\tpreload: true\n\t}));\n} else {\n\tserver = require('http').Server(app);\n}\n\n// Determine the Web Server port\nconst SERVER_PORT = (configs.devMode ? configs.devPort : configs.prodPort);\n\n// Support JSON encoded POST request bodies\napp.use(bodyParser.json());\n\n// Harden the Server\napp.use(helmet.xssFilter())\napp.use(helmet.noSniff())\napp.use(helmet.frameguard({ action: 'deny' }))\napp.use(helmet.referrerPolicy({ policy: 'no-referrer' }))\napp.use(csp({\n\tdirectives: {\n\t\tdefaultSrc: [`'none'`],\n\t\tconnectSrc: [`'self'`],\n\t\tstyleSrc: [`'self'`],\n\t\timgSrc: [`'self'`],\n\t\tscriptSrc: [`'self'`],\n\t\tupgradeInsecureRequests: true,\n\t}\n}))\napp.set('etag', false);\napp.set('x-powered-by', false);\n\n// Handle decode error incase an invalid URI is sent.\napp.use((req, res, next) => {\n\ttry {\n\t\tdecodeURIComponent(req.path)\n\t\tnext();\n\t} catch (err) {\n\t\tres.sendStatus(404);\n\t}\n})\n\napp.get('/query/:idOne/:idTwo?/:idThree?', (req, res) => {\n\t// For the URI: /query/1/this/2?u=my%20data&help=true\n\t// req.params = { idOne: '1', idTwo: 'this', idThree: '2' }\n\t// req.query = { u: 'my data', help: 'true' }\n\n\t// Send custom HTTP Status code\n\tres.status(406).send('OK');\n})\n\n// Send a file to the user.\napp.get('/favicon.ico', (req, res) => {\n\tres.sendFile(path.join(__dirname, './images/favicon.ico'));\n})\n\napp.post('/login', (req, res) => {\n\ttry {\n\t\t// Ensure we receive the right params\n\t\tif (req.body && !req.body.hasOwnProperty('username') && req.body.hasOwnProperty('password')) {\n\t\t\t// Get the params from the request\n\t\t\tlet username = req.body.username.toString() || '';\n\t\t\tlet password = req.body.password.toString() || '';\n\n\t\t\t// Perform check to see if the username & password is correct.\n\t\t\tDatabase.user.checkCredentials(username, password, (err) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tres.send({ success: false });\n\t\t\t\t} else {\n\t\t\t\t\t// Generate the session token and calculate expiration date.\n\t\t\t\t\tlet sessionToken = util.randomString(configs.sessionTokenLength);\n\t\t\t\t\tlet expirationTime = (new Date()).getTime() + configs.sessionLength;\n\n\t\t\t\t\t// Store the session & expiration time in the DB.\n\t\t\t\t\tDatabase.user.createSession(sessionToken, new Date(expirationTime));\n\n\t\t\t\t\t// Login was successful, send the cookie back to the user.\n\t\t\t\t\tres.cookie('session-token', sessionToken, {\n\t\t\t\t\t\tsecure: true,\n\t\t\t\t\t\thttpOnly: true,\n\t\t\t\t\t\tsameSite: 'strict',\n\t\t\t\t\t\tmaxAge: configs.sessionLength,\n\t\t\t\t\t}).send({ success: true });\n\t\t\t\t}\n\t\t\t})\n\t\t} else {\n\t\t\tres.send({ success: false });\n\t\t}\n\t} catch (err) {\n\t\tres.send({ success: false });\n\t}\n});\n\n\nserver.listen(SERVER_PORT, () => {\n\tconsole.log(`[-] Server Listening on Port ${SERVER_PORT}`);\n});\n"},{type:"br"},{type:"h6",data:"Config File"},{type:"code",mode:"javascript",data:"\nconst configs = {\n\t// Server Settings\n\tdevMode: true,\n\tdevPort: 80,\n\tprodPort: 443,\n\tcertPath: './cert/cert.crt',\n\tkeyPath: './cert/cert.key',\n\n\t// Session Configs\n\tsessionTokenLength: 64,\n\tsessionLength: 3600000,     // Session Length in miliseconds\n}\n\nObject.freeze(configs);\n\nmodule.exports = configs;\n"}]},"TCP Sockets":{link:"tcp-sockets",rawData:[{type:"h3",data:"TCP Sockets"},{type:"hr"},{type:"h6",data:"TCP Server"},{type:"code",mode:"javascript",data:"\nconst net = require('net');\n\nconst HOST = '127.0.0.1';\nconst PORT = 49494;\n\nnet.createServer((socket) => {\n\tconsole.log(`CONNECTED: ${socket.remoteAddress}: ${socket.remotePort}`);\n\n\tsocket.on('data', (data) => {\n\t\tconsole.log(`DATA ${socket.remoteAddress}: ${data}`);\n\n\t\t// Send the same message back to the client.\n\t\tsocket.write(`FROM SERVER - ${data}`);\n\t});\n\n\tsocket.on('error', (error) => {\n\t\tconsole.error(error);\n\t});\n\n\tsocket.on('close', (data) => {\n\t\tconsole.log(`CLOSED: ${socket.remoteAddress}: ${socket.remotePort}\\n`);\n\t});\n}).listen(PORT, HOST);\n\nconsole.log(`Server listening on  ${HOST}: ${PORT}`);\n"},{type:"br"},{type:"hr"},{type:"h6",data:"TCP Client"},{type:"code",mode:"javascript",data:"\nconst net = require('net');\n\nconst HOST = '127.0.0.1';\nconst PORT = 49494;\n\nlet socket = new net.Socket();\n\nsocket.connect(PORT, HOST, () => {\n\tconsole.log(`CONNECTED TO: ${HOST}: ${PORT}`);\n\n\t// Send a message to the server\n\tsocket.write(\"G'day Server\");\n});\n\nsocket.on('data', (data) => {\n\tconsole.log(`RECEIVED: ${data}`);\n\n\t// Close the connection\n\tsocket.destroy();\n});\n\nsocket.on('close', () => {\n\tconsole.log('Connection closed');\n});\n\nsocket.on('error', (err) => {\n\tconsole.log(`Connection Error: ${err}`);\n});\n"}]}},ReactJS:{"React-ChartJS-2":{link:"react-chartjs-2",rawData:[{type:"h3",data:"React-ChartJS-2"},{type:"hr"},{type:"h6",data:"Coming Soon"}]}},"XLSX Export":{link:"xlsx",rawData:[{type:"h3",data:"JavaScript XLSX Module"},{type:"hr"},{type:"h6",data:"Create & Export XLSX Document"},{type:"code",mode:"javascript",data:"\n// import XLSX from 'xlsx'; // Use this for React\nconst XLSX = require('xlsx');\n\n// Create a new blank XLSX Document\nlet workbook = XLSX.utils.book_new();\n\n// The data that will be added to the sheet.\nlet dataForSheet = [\n\t['Column 1', 'Column 2','Column 3','Column 4','Column 5','Column 6'],\n\t['Data 1', 'Data 2','Data 3','Data 4','Data 5','Data 6'],\n\t['Data 7', 'Data 8','Data 9','Data 10'],\n\t['Data 11', 'Data 12','','','Data 13','Data 14','Data 15'],\n];\n\n// Convert the Array data to a sheet.\nlet sheetData = XLSX.utils.aoa_to_sheet(dataForSheet);\n\n// Add the sheet to the workbook\nXLSX.utils.book_append_sheet(workbook, sheetData, 'Sheet 1');\n\n// Save the XLSX File.\nXLSX.writeFile(workbook, 'FILE_NAME.xlsx');\n"},{type:"br"},{type:"h6",data:"The above code will produce this document:"},{type:"image",data:"img/xlsx.png",style:"fill"}]},"Utility Functions":{link:"util",rawData:[{type:"h3",data:"Utility Functions"},{type:"hr"},{type:"h6",data:"Sort a list of Objects by a certain key"},{type:"code",mode:"javascript",data:"\n// Sort a list of Objects by a certain key.\nfunction sortListByKey(list, keyToSortBy, reverse) {\n\tif (reverse) {\n\t\t// Sort the list in reverse order (Highest to Lowest)\n\t\tlist.sort((a,b) => {\n\t\t\tif (a[keyToSortBy] > b[keyToSortBy]) return -1;\n\t\t\telse if (a[keyToSortBy] < b[keyToSortBy]) return 1;\n\t\t\treturn 0;\n\t\t})\n\t} else {\n\t\t// Sort the list in normal order (Lowest to Highest)\n\t\tlist.sort((a,b) => {\n\t\t\tif (a[keyToSortBy] > b[keyToSortBy]) return 1;\n\t\t\telse if (a[keyToSortBy] < b[keyToSortBy]) return -1;\n\t\t\treturn 0;\n\t\t})\n\t}\n}\n"}]}}};function f(){return m}var g=n(33),S=n(45),b=n(64),k=n(119),v=n(59),E=n.n(v),w=(n(81),n(82),n(126)),T=n(124),x=n(125),D=n(129),O=n(121),P=n(130),C=n(123),R=n(127),L=n(40),j=n(61),q=n.n(j),H=n(60),_=n.n(H),B=Object(k.a)((function(e){return{root:{display:"flex"},appBar:{zIndex:e.zIndex.drawer+1},drawer:{width:220},drawerPaper:{width:220,backgroundColor:"#2e2e38",borderRight:"3px solid rgba(255,255,255,0.3)"},drawerContainer:{overflow:"auto",color:"#000",backgroundColor:"#2e2e38"},link:{textDecoration:"none",paddingTop:0,paddingBottom:0},content:{flexGrow:1,padding:e.spacing(3)}}}));var F=function(e){var t=B(),n=r.a.useState({}),a=Object(b.a)(n,2),o=a[0],s=a[1],c=e.rawData||[{type:"h2",data:"No Data for Page"}];return r.a.createElement("div",{className:t.root},r.a.createElement(x.a,null),r.a.createElement(w.a,{position:"fixed",className:t.appBar,style:{backgroundColor:"#305EA1"}},r.a.createElement(R.a,null,r.a.createElement(L.a,{variant:"h6",noWrap:!0,style:{cursor:"pointer"}},"Oldmate's Templates"))),r.a.createElement(D.a,{className:t.drawer,variant:"permanent",classes:{paper:t.drawerPaper}},r.a.createElement(R.a,null),r.a.createElement("div",{className:t.drawerContainer},function e(n){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,c=[];return Object.keys(n).forEach((function(i,l){Object.keys(n[i]).length>0&&!n[i].hasOwnProperty("rawData")?c.push(r.a.createElement(r.a.Fragment,{key:"".concat(a,"_").concat(l)},r.a.createElement(O.a,null,r.a.createElement(P.a,{button:!0,onClick:function(){return s(Object(S.a)(Object(S.a)({},o),{},Object(g.a)({},i,!o[i])))},className:t.link},r.a.createElement(C.a,{primary:i,className:t.link}),o[i]?r.a.createElement(_.a,{style:{color:"#f6f6fa"}}):r.a.createElement(q.a,{style:{color:"#f6f6fa"}}))),r.a.createElement(T.a,{in:!!o[i],timeout:"auto",unmountOnExit:!0},e(n[i],a)))):c.push(r.a.createElement(y.b,{to:n[i].link,key:"".concat(a,"_").concat(l),style:{paddingLeft:"".concat(12*a,"px")},className:t.link},r.a.createElement(P.a,{button:!0,className:t.link},r.a.createElement(C.a,{primary:i}))))})),r.a.createElement(O.a,{style:{paddingLeft:"".concat(12*a,"px")}},c)}(f()))),r.a.createElement("main",{className:t.content},r.a.createElement(R.a,null),c.map((function(e,t){return r.a.createElement(r.a.Fragment,{key:t},function(e){return"h1"===e.type?r.a.createElement(L.a,{variant:"h1"},e.data):"h2"===e.type?r.a.createElement(L.a,{variant:"h2"},e.data):"h3"===e.type?r.a.createElement(L.a,{variant:"h3",style:{letterSpacing:"1.5px"}},e.data):"h4"===e.type?r.a.createElement(L.a,{variant:"h4"},e.data):"h5"===e.type?r.a.createElement(L.a,{variant:"h5"},e.data):"h6"===e.type?r.a.createElement(L.a,{variant:"h6"},e.data):"hr"===e.type?r.a.createElement("hr",null):"br"===e.type?r.a.createElement("br",null):"code"===e.type?r.a.createElement(E.a,{mode:e.mode||"javascript",theme:"monokai",fontSize:14,setOptions:{tabSize:4,showLineNumbers:!0},readOnly:!0,focus:!1,width:"100%",maxLines:1/0,value:e.data}):"image"===e.type?r.a.createElement("img",{src:e.data,alt:""}):r.a.createElement("p",null,e.data)}(e))}))))},X=[{type:"h3",data:"Home"},{type:"hr"},{type:"h6",data:"Welcome to my template site. This site contains random useful code snippets for certain situtions. Feel free to have a look around and use what you like."}],N=function(e){Object(d.a)(n,e);var t=Object(h.a)(n);function n(e){var a;return Object(l.a)(this,n),(a=t.call(this,e)).siteData=f(),a.cleanName=function(e){return e.toLowerCase().match(/[a-z0-9-]+/).join("")},a.state={},a}return Object(p.a)(n,[{key:"buildRouterRecursive",value:function(e,t){var n=this;Object.keys(e).forEach((function(a,o){if(Object.keys(e[a]).length>0&&!e[a].hasOwnProperty("rawData"))n.buildRouterRecursive(e[a],t);else{var s=n.cleanName(a),c=r.a.createElement(u.b,{key:"".concat(s,"_").concat(o),path:"/".concat(e[a].link)},r.a.createElement(F,{rawData:e[a].rawData}));t.push(c)}}))}},{key:"render",value:function(){var e=[];return this.buildRouterRecursive(this.siteData,e),r.a.createElement(y.a,null,r.a.createElement(u.d,null,r.a.createElement(u.b,{path:"/home"},r.a.createElement(F,{rawData:X})),e,r.a.createElement(u.a,{to:"/home"})))}}]),n}(r.a.Component),$=(n(86),Object(i.a)({typography:{fontFamily:"Oxygen",useNextVariants:!0},overrides:{MuiTypography:{h1:{color:"#f6f6fa"},h2:{color:"#f6f6fa"},h3:{color:"#f6f6fa"},h4:{color:"#f6f6fa"},h5:{color:"#f6f6fa"},h6:{color:"#f6f6fa"},body1:{color:"#f6f6fa"},body2:{color:"#f6f6fa"},subtitle1:{color:"#f6f6fa"}},MuiBreadcrumbs:{root:{color:"#f6f6fa"}},MuiTouchRipple:{root:{color:"#f6f6fa"}},MuiIconButton:{root:{padding:0,marginLeft:10,marginRight:10,color:"#f6f6fa","&:hover":{boxShadow:"0 0 24px 0px"}}}}}));s.a.render(r.a.createElement(c.a,{theme:$},r.a.createElement(r.a.Fragment,null,r.a.createElement(N,null))),document.getElementById("root"))}},[[69,1,2]]]);