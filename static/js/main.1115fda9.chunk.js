(this["webpackJsonpoldmates-templates"]=this["webpackJsonpoldmates-templates"]||[]).push([[0],{64:function(e,t,a){e.exports=a(81)},81:function(e,t,a){"use strict";a.r(t);var n=a(0),o=a.n(n),r=a(7),c=a.n(r),l=a(53),s=a(54),i=a(60),d=a(58),p=a(6),u=a(37);var m={NodeJS:{Cryptography:{link:"crypto",rawData:[{type:"h1",data:"JavaScript Crypto Module"},{type:"hr"},{type:"h3",data:"Symmetric Encryption (AES-256 Counter-Mode)"},{type:"code",mode:"javascript",data:"\nconst crypto = require('crypto');\n\nlet key = Buffer.from('0000111122223333444455556666777788889999aaaabbbbccccddddeeeeffff', 'hex')\nlet iv = Buffer.from('0123456789abcdef0123456789abcdef', 'hex')\nlet secret_msg = Buffer.from('To be Encrypted!', 'utf-8');\n\n// Encrypt\nlet cipher = crypto.createCipheriv('aes-256-ctr', key, iv);\nlet encrypted = cipher.update(secret_msg);\n\n// Decrypt\nlet decipher = crypto.createDecipheriv('aes-256-ctr', key, iv);\nlet decrypted = decipher.update(encrypted, 'hex');\n\nconsole.log(`\\nEncryption Key: ${key.toString('hex')}`)\nconsole.log(`IV: \\t\\t${iv.toString('hex')}\\n`)\n\nconsole.log(`Plain-text: \\t${secret_msg.toString('hex')}`);\nconsole.log(`Encrypted: \\t${encrypted.toString('hex')}`);\nconsole.log(`Encrypted: \\t${encrypted.toString('base64')}`);\nconsole.log(`Decrypted: \\t${decrypted.toString('utf-8')}\\n`);\n"},{type:"br"},{type:"hr"},{type:"h3",data:"Hashing (SHA256)"},{type:"code",mode:"javascript",data:"\nconst crypto = require('crypto');\n\n// Get a list of supported Hash Algorithms\nconsole.log(crypto.getHashes());\n\nlet msgToHash = 'Password1';\n\nlet hashFunction = crypto.createHash('sha256');\nhashFunction.update(msgToHash);\nconsole.log(hashFunction.digest('hex'));\n"},{type:"br"},{type:"hr"},{type:"h3",data:"Elliptic Curve Diffie-Hellman"},{type:"code",mode:"javascript",data:"\nconst crypto = require('crypto');\n\nconst alice = crypto.createECDH('sect571k1');\nalice.generateKeys();\n\nconst bob = crypto.createECDH('sect571k1');\nbob.generateKeys();\n\nconsole.log(\"\\nAlice Public:\", alice.getPublicKey().toString('base64'))\nconsole.log(\"Alice Private:\", alice.getPrivateKey().toString('base64'))\nconsole.log(\"Bob Public:\", bob.getPublicKey().toString('base64'))\nconsole.log(\"Bob Private:\", bob.getPrivateKey().toString('base64'))\n\nconsole.log(\"Shared Secret: \", alice.computeSecret(bob.getPublicKey(), null, 'base64'))\nconsole.log(\"Shared Secret: \", bob.computeSecret(alice.getPublicKey(), null, 'base64'), \"\\n\")\n"}]},"TCP Sockets":{link:"tcp-sockets",rawData:[{type:"h1",data:"TCP Sockets"},{type:"hr"},{type:"h3",data:"TCP Server"},{type:"code",mode:"javascript",data:"\nconst net = require('net');\n\nconst HOST = '127.0.0.1';\nconst PORT = 49494;\n\nnet.createServer((socket) => {\n\tconsole.log(`CONNECTED: ${socket.remoteAddress}: ${socket.remotePort}`);\n\n\tsocket.on('data', (data) => {\n\t\tconsole.log(`DATA ${socket.remoteAddress}: ${data}`);\n\n\t\t// Send the same message back to the client.\n\t\tsocket.write(`FROM SERVER - ${data}`);\n\t});\n\n\tsocket.on('error', (error) => {\n\t\tconsole.error(error);\n\t});\n\n\tsocket.on('close', (data) => {\n\t\tconsole.log(`CLOSED: ${socket.remoteAddress}: ${socket.remotePort}\\n`);\n\t});\n}).listen(PORT, HOST);\n\nconsole.log(`Server listening on  ${HOST}: ${PORT}`);\n"},{type:"br"},{type:"hr"},{type:"h3",data:"TCP Client"},{type:"code",mode:"javascript",data:"\nconst net = require('net');\n\nconst HOST = '127.0.0.1';\nconst PORT = 49494;\n\nlet socket = new net.Socket();\n\nsocket.connect(PORT, HOST, () => {\n\tconsole.log(`CONNECTED TO: ${HOST}: ${PORT}`);\n\n\t// Send a message to the server\n\tsocket.write(\"G'day Server\");\n});\n\nsocket.on('data', (data) => {\n\tconsole.log(`RECEIVED: ${data}`);\n\n\t// Close the connection\n\tsocket.destroy();\n});\n\nsocket.on('close', () => {\n\tconsole.log('Connection closed');\n});\n\nsocket.on('error', (err) => {\n\tconsole.log(`Connection Error: ${err}`);\n});\n"}]}},ReactJS:{"React-ChartJS-2":{link:"react-chartjs-2",rawData:null},"XLSX Export":{link:"xlsx",rawData:[{type:"h1",data:"JavaScript XLSX Module (Works for Node too)"},{type:"hr"},{type:"h3",data:"Create & Export XLSX Document"},{type:"code",mode:"javascript",data:"\n// const XLSX = require('xlsx'); // Use this for NodeJS\nimport XLSX from 'xlsx';\n\n// Create a new blank XLSX Document\nlet workbook = XLSX.utils.book_new();\n\n// The data that will be added to the sheet.\nlet dataForSheet = [\n\t['Column 1', 'Column 2','Column 3','Column 4','Column 5','Column 6'],\n\t['Data 1', 'Data 2','Data 3','Data 4','Data 5','Data 6'],\n\t['Data 7', 'Data 8','Data 9','Data 10'],\n\t['Data 11', 'Data 12','','','Data 13','Data 14'],\n];\n\n// Convert the Array data to a sheet.\nlet sheetData = XLSX.utils.aoa_to_sheet(dataForSheet);\n\n// Add the sheet to the workbook\nXLSX.utils.book_append_sheet(workbook, sheetData, 'Sheet 1');\n\n// Save the XLSX File.\nXLSX.writeFile(workbook, 'FILE_NAME.xlsx');\n"}]}}};function h(){return m}var y=a(33),E=a(43),b=a(59),g=a(115),k=a(55),S=a.n(k),f=(a(76),a(77),a(122)),v=a(120),D=a(121),O=a(124),C=a(117),w=a(125),P=a(119),T=a(123),x=a(38),j=a(57),N=a.n(j),X=a(56),_=a.n(X),L=Object(g.a)((function(e){return{root:{display:"flex"},appBar:{zIndex:e.zIndex.drawer+1},drawer:{width:300},drawerPaper:{width:300},drawerContainer:{overflow:"auto",color:"#000"},link:{textDecoration:"none",paddingTop:0,paddingBottom:0},content:{flexGrow:1,padding:e.spacing(3)}}}));var R=function(e){var t=L(),a=o.a.useState({}),n=Object(b.a)(a,2),r=n[0],c=n[1],l=e.rawData||[{type:"h2",data:"No Data for Page"}];return o.a.createElement("div",{className:t.root},o.a.createElement(D.a,null),o.a.createElement(f.a,{position:"fixed",className:t.appBar,style:{backgroundColor:Object({NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0}).REACT_APP_BLUE}},o.a.createElement(T.a,null,o.a.createElement(x.a,{variant:"h6",noWrap:!0,style:{cursor:"pointer"}},"Oldmate's Templates"))),o.a.createElement(O.a,{className:t.drawer,variant:"permanent",classes:{paper:t.drawerPaper}},o.a.createElement(T.a,null),o.a.createElement("div",{className:t.drawerContainer},function e(a){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,l=[];return Object.keys(a).forEach((function(s,i){Object.keys(a[s]).length>0&&!a[s].hasOwnProperty("rawData")?l.push(o.a.createElement(o.a.Fragment,{key:"".concat(n,"_").concat(i)},o.a.createElement(C.a,null,o.a.createElement(w.a,{button:!0,onClick:function(){return c(Object(E.a)(Object(E.a)({},r),{},Object(y.a)({},s,!r[s])))},className:t.link},o.a.createElement(P.a,{primary:s,className:t.link}),r[s]?o.a.createElement(_.a,null):o.a.createElement(N.a,null))),o.a.createElement(v.a,{in:!!r[s],timeout:"auto",unmountOnExit:!0},e(a[s],n)))):l.push(o.a.createElement(u.b,{to:a[s].link,key:"".concat(n,"_").concat(i),style:{paddingLeft:"".concat(12*n,"px")},className:t.link},o.a.createElement(w.a,{button:!0,className:t.link},o.a.createElement(P.a,{primary:s}))))})),o.a.createElement(C.a,{style:{paddingLeft:"".concat(12*n,"px")}},l)}(h()))),o.a.createElement("main",{className:t.content},o.a.createElement(T.a,null),l.map((function(e,t){return o.a.createElement(o.a.Fragment,{key:t},function(e){return"h1"===e.type?o.a.createElement("h1",null,e.data):"h2"===e.type?o.a.createElement("h2",null,e.data):"h3"===e.type?o.a.createElement("h3",null,e.data):"h4"===e.type?o.a.createElement("h4",null,e.data):"h5"===e.type?o.a.createElement("h5",null,e.data):"h6"===e.type?o.a.createElement("h6",null,e.data):"hr"===e.type?o.a.createElement("hr",null):"br"===e.type?o.a.createElement("br",null):"code"===e.type?o.a.createElement(S.a,{mode:e.mode||"javascript",theme:"monokai",fontSize:14,setOptions:{tabSize:4,showLineNumbers:!0},readOnly:!0,focus:!1,width:"100%",maxLines:1/0,value:e.data}):o.a.createElement("p",null,e.data)}(e))}))))},H=[{type:"h1",data:"Home"},{type:"hr"},{type:"h3",data:"Welcome to my template site. This site contains random useful code snippets for certain situtions. Feel free to have a look around and use what you like."}],$=function(e){Object(i.a)(a,e);var t=Object(d.a)(a);function a(e){var n;return Object(l.a)(this,a),(n=t.call(this,e)).siteData=h(),n.cleanName=function(e){return e.toLowerCase().match(/[a-z0-9-]+/).join("")},n.state={},n}return Object(s.a)(a,[{key:"buildRouterRecursive",value:function(e,t){var a=this;Object.keys(e).forEach((function(n,r){if(Object.keys(e[n]).length>0&&!e[n].hasOwnProperty("rawData"))a.buildRouterRecursive(e[n],t);else{var c=a.cleanName(n),l=o.a.createElement(p.b,{key:"".concat(c,"_").concat(r),path:"/".concat(e[n].link)},o.a.createElement(R,{rawData:e[n].rawData}));t.push(l)}}))}},{key:"render",value:function(){var e=[];return this.buildRouterRecursive(this.siteData,e),o.a.createElement(u.a,null,o.a.createElement(p.d,null,o.a.createElement(p.b,{path:"/home"},o.a.createElement(R,{rawData:H})),e,o.a.createElement(p.a,{to:"/home"})))}}]),a}(o.a.Component);c.a.render(o.a.createElement(o.a.Fragment,null,o.a.createElement($,null)),document.getElementById("root"))}},[[64,1,2]]]);
//# sourceMappingURL=main.1115fda9.chunk.js.map